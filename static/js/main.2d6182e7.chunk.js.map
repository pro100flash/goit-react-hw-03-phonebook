{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmitData","reset","this","onSubmit","type","onChange","Component","ContactListItem","contact","onDeleteContact","onClick","id","ContactList","contacts","map","Filter","onChangeFilter","App","filter","changeFilter","data","addContact","shortid","generate","find","alert","localStorage","getItem","JSON","parse","prevState","setItem","stringify","filteredContacts","toLowerCase","includes","filterContacts","length","ReactDOM","render","document","getElementById"],"mappings":"gQA0DeA,E,4MAtDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GACd,MAAwBA,EAAEC,OAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAACJ,GACdA,EAAEK,iBACG,EAAKT,MAAMC,MAAS,EAAKD,MAAME,SAGpC,EAAKQ,MAAMC,aAAX,eAA6B,EAAKX,QAClC,EAAKY,U,2CAEP,WACEC,KAAKN,SAAS,CACZN,KAAM,GACNC,OAAQ,O,oBAIZ,WACE,MAAyBW,KAAKb,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMY,SAAUD,KAAKL,aAArB,UACE,sCACA,uBACEO,KAAK,OACLd,KAAK,OACLK,MAAOL,EACPe,SAAUH,KAAKV,eAEjB,wCACA,uBACEY,KAAK,OACLd,KAAK,SACLK,MAAOJ,EACPc,SAAUH,KAAKV,eAEjB,sBACA,wBAAQY,KAAK,SAAb,sC,GA7CkBE,aCoBXC,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qCACE,iCACGD,EAAQlB,KADX,MACoBkB,EAAQjB,UAE5B,wBAAQmB,QAAS,kBAAMD,EAAgBD,EAAQG,KAA/C,0BCsBWC,EA1BK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUJ,EAAsB,EAAtBA,gBAC/B,OACE,6BACGI,EAASC,KAAI,SAACN,GAAD,OACZ,6BACE,cAAC,EAAD,CACEA,QAASA,EACTC,gBAAiBA,KAHZD,EAAQG,UCOVI,EAZA,SAAC,GAAD,IAAGpB,EAAH,EAAGA,MAAOqB,EAAV,EAAUA,eAAV,OACb,qCACE,sDACA,uBAAO1B,KAAK,SAASe,SAAUW,EAAgBrB,MAAOA,Q,iBC8E3CsB,E,4MAxEb5B,MAAQ,CACNwB,SAAU,GACVK,OAAQ,I,EAiBVC,aAAe,SAAC1B,GACd,IAAQE,EAAUF,EAAEC,OAAZC,MACR,EAAKC,SAAS,CAAEsB,OAAQvB,K,EAG1Bc,gBAAkB,SAACE,GACjB,EAAKf,SAAS,CACZiB,SAAU,EAAKxB,MAAMwB,SAASK,QAAO,SAACV,GAAD,OAAaA,EAAQG,KAAOA,Q,EAIrEX,aAAe,SAACoB,GACd,IAAQP,EAAa,EAAKxB,MAAlBwB,SAEFQ,EAAa,CACjBV,GAAIW,IAAQC,WACZjC,KAAM8B,EAAK9B,KACXC,OAAQ6B,EAAK7B,QAGXsB,EAASW,MAAK,SAAChB,GAAD,OAAaA,EAAQlB,OAAS+B,EAAW/B,QACzDmC,MAAM,GAAD,OAAIJ,EAAW/B,KAAf,6BAGP,EAAKM,SAAS,CACZiB,SAAS,GAAD,mBAAMA,GAAN,CAAgBQ,O,uDAvC5B,WACMK,aAAaC,QAAQ,aACvBzB,KAAKN,UAAS,iBAAO,CACnBiB,SAAS,YAAKe,KAAKC,MAAMH,aAAaC,QAAQ,oB,gCAKpD,SAAmBG,GACbA,EAAUjB,WAAaX,KAAKb,MAAMwB,UACpCa,aAAaK,QAAQ,WAAYH,KAAKI,UAAU9B,KAAKb,MAAMwB,a,oBAiC/D,WACE,MAA6BX,KAAKb,MAA1BwB,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,OACZe,EAxDa,SAACpB,EAAUK,GAAX,OACrBL,EAASK,QAAO,SAACV,GAAD,OACdA,EAAQlB,KAAK4C,cAAcC,SAASjB,EAAOgB,kBAsDlBE,CAAevB,EAAUK,GAClD,OACE,qCACE,2CACA,cAAC,EAAD,CAAalB,aAAcE,KAAKF,eACX,IAApBa,EAASwB,QACR,qCACE,0CACCxB,EAASwB,OAAS,GACjB,cAAC,EAAD,CAAQ1C,MAAOuB,EAAQF,eAAgBd,KAAKiB,eAE9C,cAAC,EAAD,CACEN,SAAUoB,EACVxB,gBAAiBP,KAAKO,4B,GAhElBH,a,MCNlBgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2d6182e7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!this.state.name || !this.state.number) {\r\n      return;\r\n    }\r\n    this.props.onSubmitData({ ...this.state });\r\n    this.reset();\r\n  };\r\n  reset() {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h2>Name</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <h2>Number</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={this.handleChange}\r\n        />\r\n        <p></p>\r\n        <button type=\"submit\"> Add new contact </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmitData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ contact, onDeleteContact }) => (\r\n  <>\r\n    <span>\r\n      {contact.name} : {contact.number}\r\n    </span>\r\n    <button onClick={() => onDeleteContact(contact.id)}> Delete </button>\r\n  </>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id}>\r\n          <ContactListItem\r\n            contact={contact}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <>\r\n    <p>Find contacts by name</p>\r\n    <input name=\"filter\" onChange={onChangeFilter} value={value} />\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport shortid from \"shortid\";\n\nconst filterContacts = (contacts, filter) =>\n  contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(\"contacts\")) {\n      this.setState(() => ({\n        contacts: [...JSON.parse(localStorage.getItem(\"contacts\"))],\n      }));\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = (e) => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  onDeleteContact = (id) => {\n    this.setState({\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\n    });\n  };\n\n  onSubmitData = (data) => {\n    const { contacts } = this.state;\n\n    const addContact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    if (contacts.find((contact) => contact.name === addContact.name)) {\n      alert(`${addContact.name} is already in contacts!`);\n      return;\n    }\n    this.setState({\n      contacts: [...contacts, addContact],\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitData={this.onSubmitData} />\n        {contacts.length !== 0 && (\n          <>\n            <h2>Contacts</h2>\n            {contacts.length > 1 && (\n              <Filter value={filter} onChangeFilter={this.changeFilter} />\n            )}\n            <ContactList\n              contacts={filteredContacts}\n              onDeleteContact={this.onDeleteContact}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}